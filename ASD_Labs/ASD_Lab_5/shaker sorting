#include <stdio.h>

#define n 8

int main()
{
    printf("ORIGINAL MATRIX\n");
    int matrix[n][n] = {
        {8, 6, 5, 4, 11, 10, 2, 3},
        {0, 12, 4, 7, 9, 4, 5, 8},
        {4, 6, 9, 2, 3, 6, 10, 2},
        {5, 3, 9, 8, 7, 8, 2, 2},
        {3, 2, 3, 9, 7, 2, 1, 4},
        {2, 8, 4, 3, 7, 11, 5, 1},
        {8, 2, 1, 4, 3, 5, 12, 6},
        {2, 1, 4, 5, 7, 1, 6, 10} };
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < n; j++)
        {
            printf("%d ", matrix[i][j]);
        }
        printf("\n");
    }
    printf("\n");
    int left = 0,
        right = n - 1,
        count = 0;
    while (left < right)
    {
        for (int i = left; i < right; i++)
        {
            count++;
            if (matrix[i][i] < matrix[i + 1][i + 1])
            {
                int temp = matrix[i][i];
                matrix[i][i] = matrix[i + 1][i + 1];
                matrix[i + 1][i + 1] = temp;
            }
        }
        right--;

        for (int i = right; i > left; i--)
        {
            count++;
            if (matrix[i - 1][i - 1] < matrix[i][i])
            {
                int temp = matrix[i - 1][i - 1];
                matrix[i - 1][i - 1] = matrix[i][i];
                matrix[i][i] = temp;
            }
        }
        left++;
    }
    printf("Matrix with sorted diagonal\n");
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < n; j++)
        {
            printf("%d ", matrix[i][j]);
        }
        printf("\n");
    }
    printf("\n");
    printf("\nCounter: %d", count);
    return 0;
}
